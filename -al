[1mdiff --git a/classroom b/classroom[m
[1mindex a5e7c90..e37c878 100755[m
[1m--- a/classroom[m
[1m+++ b/classroom[m
[36m@@ -3,24 +3,38 @@[m
 #import yaml[m
 import argparse[m
 import sys[m
[32m+[m[32mimport textwrap[m
 [m
 flag_force=False[m
[32m+[m[32mflag_debug=False[m
[32m+[m[32mcmd_name="classroom"[m
 [m
 #============================================================================[m
 [m
 def main():[m
 [m
[31m-    global flag_force[m
[32m+[m[32m    global flag_force, flag_debug[m
 [m
     parser = argparse.ArgumentParser( add_help=False , usage=None )[m
     parser.add_argument('--help','-h', action='store_true')[m
     parser.add_argument('--force','-f', action='store_true')[m
[32m+[m[32m    parser.add_argument('--verbose','-v', action='store_true')[m
[32m+[m[32m    parser.add_argument('--debug','-d', action='store_true')[m
     parser.add_argument('params', nargs='*')[m
     args=parser.parse_args()[m
     flag_force=args.force[m
[32m+[m[32m    flag_debug=args.debug[m
[32m+[m[32m    debug("DEBUG = %s"%(flag_debug))[m
[32m+[m[32m    debug("FORCE = %s"%(flag_force))[m
 [m
     pars=args.params[1:][m
[31m-    cmd=args.params[0] if len(args.params)>0 else "help"[m
[32m+[m[32m    if len(args.params)==0 :[m
[32m+[m[32m        cmd="help"[m
[32m+[m[32m        args.help=True[m
[32m+[m[32m    else:[m
[32m+[m[32m        cmd=args.params[0][m[41m [m
[32m+[m[32m    debug("CMD = %s"%(cmd))[m
[32m+[m[32m    debug("HELP = %s"%(args.help))[m
     if args.help:[m
         pars.insert(0,"help") [m
 [m
[36m@@ -32,73 +46,96 @@[m [mdef main():[m
     elif cmd == "info":    run_info(pars)[m
     elif cmd == "list":    run_list(pars)[m
     elif cmd == "config":  run_config(pars)[m
[31m-    elif cmd == "help":    help_main()[m
[32m+[m[32m    elif cmd == "help":    help_main(0)[m
     else:[m
         print("ERROR: no such command as '%s'."%(cmd), file=sys.stderr)[m
[31m-        help_main(cmd)[m
[32m+[m[32m        help_main(2)[m
         exit(2)[m
 [m
 #============================================================================[m
 [m
[31m-def run_build(params):[m
[32m+[m[32mdef debug(s):[m
[32m+[m[32m    if flag_debug :[m
[32m+[m[32m        print(s)[m
[32m+[m
[32m+[m[32mdef verbose(s):[m
[32m+[m[32m    if flag_verbose or flag_debug:[m
[32m+[m[32m        print(s)[m
 [m
[32m+[m[32m#============================================================================[m
[32m+[m
[32m+[m[32mdef run_build(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_build(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_destroy(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_destroy(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_add(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_add(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_remove(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_remove(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_action(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_action(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_info(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_info(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_list(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_list(0)[m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def run_config(params):[m
     if len(params)>0 and params[0]=="help" :[m
         help_config(0) [m
[31m-    print(dir())[m
[32m+[m[32m    print("This function is not yet implemented")[m
 [m
 #============================================================================[m
 [m
 def help_main(exit_status):[m
[31m-    print("general help missing - FIX")[m
[32m+[m[32m    print(textwrap.dedent("""\[m
[32m+[m[32m        Optional Flags:[m
[32m+[m[32m            --debug, -d[m[41m    [m
[32m+[m[32m            --verbose, -v[m
[32m+[m[32m            --help, -h, help[m
[32m+[m
[32m+[m[32m        Commands:[m
[32m+[m[32m            build:[m[41m [m
[32m+[m[32m          destroy:[m
[32m+[m[32m              add:[m
[32m+[m[32m           remove:[m
[32m+[m[32m             info:[m
[32m+[m[32m             list:[m
[32m+[m[32m           config:[m
[32m+[m[32m    """))[m
     exit(exit_status)[m
 [m
 def help_build(exit_status):[m
